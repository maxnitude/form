{"version":3,"sources":["reducers/index.js","store.js","components/MainContainer.js","components/Form.js","components/Input.js","components/Button.js","components/Step1Form.js","actions/index.js","components/Step2Form.js","components/Step3Form.js","components/Header.js","components/EndPage.js","App.js","index.js"],"names":["initialState","name","surname","patronymic","email","password","birthday","header","reducer","state","action","type","payload","console","log","store","createStore","useStyles","makeStyles","root","display","flexDirection","alignItems","MainContainer","children","props","styles","Container","className","container","maxWidth","theme","width","marginTop","spacing","justifyContent","Form","noValidate","Input","forwardRef","ref","TextField","variant","margin","inputRef","fullWidth","height","ControlButton","Button","color","textField","schema","yup","shape","matches","min","max","required","mapDispatchToProps","addedName","addedSurname","addedPatronymic","addedBirthday","check","connect","history","useHistory","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","formState","Typography","component","onSubmit","push","label","onChange","e","target","value","error","helperText","message","id","defaultValue","InputLabelProps","shrink","addedEmail","addedPassword","useState","isPassword","setIsPassword","isButton","setIsButton","onInput","disabled","onClick","textAlign","fontSize","marginBottom","table","changeHeader","useEffect","personalData","Object","entries","filter","item","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","scope","toString","App","exact","path","Step1Form","Step2Form","Step3Form","EndPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54cc4923.chunk.js","sourcesContent":["const initialState = {\r\n    name: null,\r\n    surname: null,\r\n    patronymic: null,\r\n    email: null,\r\n    password: null,\r\n    birthday: null,\r\n    header: 'Registration form',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NAME':\r\n            return {\r\n                ...state,\r\n                name: action.payload,\r\n            };\r\n\r\n        case 'ADD_SURNAME':\r\n            return {\r\n                ...state,\r\n                surname: action.payload,\r\n            };\r\n\r\n        case 'ADD_PATRONYMIC':\r\n            return {\r\n                ...state,\r\n                patronymic: action.payload,\r\n            };\r\n\r\n        case 'CHECK':\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                };\r\n        \r\n        case 'ADD_EMAIL':\r\n            return {\r\n                ...state,\r\n                email: action.payload,\r\n            };\r\n\r\n        case 'ADD_PASSWORD':\r\n            return {\r\n                ...state,\r\n                password: action.payload,\r\n            };\r\n            \r\n        case 'ADD_BIRTHDAY':\r\n            return {\r\n                ...state,\r\n                birthday: action.payload,\r\n            };\r\n\r\n        case 'CHANGE_HEADER':   \r\n            return {\r\n                ...state,\r\n                header: action.payload,\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport {makeStyles}  from '@material-ui/core/styles';\r\nimport {Container} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    }\r\n}));\r\n\r\nconst MainContainer = ({ children, ...props}) => {\r\n    const styles = useStyles()\r\n    \r\n    return (\r\n        <Container className={styles.root} container=\"main\" maxWidth=\"xs\" {...props}>\r\n            {children}\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default MainContainer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}))\r\n\r\nexport const Form = ({ children, ...props }) => {\r\n    const styles = useStyles()\r\n\r\n    return (\r\n        <form className={styles.root} noValidate {...props}>\r\n            {children}\r\n        </form>\r\n    )\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const Input = forwardRef((props, ref) => {\r\n    return (\r\n        <TextField variant=\"outlined\" margin=\"normal\" inputRef={ref} fullWidth { ...props} />\r\n    );\r\n});\r\n","import React from 'react'\r\nimport {makeStyles}  from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: \"150px\",\r\n        height: \"50px\",\r\n        margin: \"20px auto\"\r\n    }\r\n}));\r\n\r\nexport const ControlButton = ({ children, ...props}) => {\r\n    \r\n    const styles = useStyles();\r\n    \r\n    return (\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={styles.root} {...props}>\r\n            {children}\r\n        </Button>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { Typography, TextField } from '@material-ui/core';\r\n// import { Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { addedName, addedSurname, addedPatronymic, addedBirthday, check } from '../actions/index';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport MainContainer from './MainContainer';\r\nimport { Form } from './Form';\r\nimport { Input } from './Input';\r\nimport { ControlButton } from './Button';\r\nimport { useHistory } from 'react-router';\r\nimport { makeStyles }  from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    textField: {\r\n        width: \"100%\",\r\n        marginTop: \"20px\"\r\n    }\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    surname: yup\r\n        .string()\r\n        .matches(/^([^0-9]*)$/, \"Surname should not contain numbers\")\r\n        .matches(/^([A-Za-z]*)$/, \"Surname should contain latin letters only\")\r\n        .min(3, \"Surname should contain more than 3 letters\")\r\n        .max(20, \"Surname should not contain more than 20 letters\")\r\n        .required(\"Surname is a required field\"),\r\n    name: yup\r\n        .string()\r\n        .matches(/^([^0-9]*)$/, \"Name should not contain numbers\")\r\n        .matches(/^([A-Za-z]*)$/, \"Name should contain latin letters only\")\r\n        .min(3, \"Name should contain more than 3 letters\")\r\n        .max(20, \"Name should not contain more than 20 letters\")\r\n        .required(\"Name is a required field\"),\r\n    patronymic: yup\r\n        .string()\r\n        .matches(/^([^0-9]*)$/, \"Patronymic should not contain numbers\")\r\n        .matches(/^([A-Za-z]*)$/, \"Patronymic should contain latin letters only\")\r\n        .min(3, \"Patronymic should contain more than 3 letters\")\r\n        .max(20, \"Patronymic should not contain more than 20 letters\")\r\n        .required(\"Patronymic is a required field\"),\r\n\r\n});\r\n\r\nconst Step1Form = ({ addedName, addedSurname, addedPatronymic, addedBirthday, check, name, surname, patronymic, birthday }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = useStyles()\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        defaultValues: { name: name, surname: surname, patronymic: patronymic },\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = () => {\r\n        history.push(\"/step2\")\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">Enter your personal data</Typography>\r\n            <Form onSubmit={handleSubmit(onSubmit)} >\r\n                <Input\r\n                    {...register('surname')}\r\n                    type=\"text\"\r\n                    label=\"Surname\"\r\n                    name=\"surname\"\r\n                    onChange={(e) => addedSurname(e.target.value)}\r\n                    error={!!errors.surname}\r\n                    helperText={errors?.surname?.message}\r\n                />\r\n                <Input\r\n                    {...register('name')}\r\n                    type=\"text\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    onChange={(e) => addedName(e.target.value)}\r\n                    error={!!errors.name}\r\n                    helperText={errors?.name?.message}\r\n                />\r\n                <Input\r\n                    {...register('patronymic')}\r\n                    type=\"text\"\r\n                    label=\"Patronymic\"\r\n                    name=\"patronymic\"\r\n                    onChange={(e) => addedPatronymic(e.target.value)}\r\n                    error={!!errors.patronymic}\r\n                    helperText={errors?.patronymic?.message}\r\n                />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Birthday\"\r\n                    type=\"date\"\r\n                    defaultValue={birthday}\r\n                    className={styles.textField}\r\n                    onChange={(e) => addedBirthday(e.target.value)}\r\n                    required\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <ControlButton>Next</ControlButton>\r\n            </Form>\r\n            {/* <Button\r\n                onClick={() => check()}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >log data</Button> */}\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        name: state.name,\r\n        surname: state.surname,\r\n        patronymic: state.patronymic,\r\n        birthday: state.birthday\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addedName,\r\n    addedSurname,\r\n    addedPatronymic,\r\n    addedBirthday,\r\n    check\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1Form);","const addedName = (name) => {\r\n    return {\r\n        type: 'ADD_NAME',\r\n        payload: name\r\n    };\r\n};\r\n\r\nconst addedSurname = (surname) => {\r\n    return {\r\n        type: 'ADD_SURNAME',\r\n        payload: surname,\r\n    };\r\n};\r\n\r\nconst addedPatronymic = (patronymic) => {\r\n    return {\r\n        type: 'ADD_PATRONYMIC',\r\n        payload: patronymic,\r\n    };\r\n};\r\n\r\nconst check = () => {\r\n    return {\r\n        type: 'CHECK',\r\n    };\r\n};\r\n\r\nconst addedEmail = (email) => {\r\n    return {\r\n        type: 'ADD_EMAIL',\r\n        payload: email\r\n    };\r\n};\r\n\r\nconst addedPassword = (password) => {\r\n    return {\r\n        type: 'ADD_PASSWORD',\r\n        payload: password\r\n    };\r\n};\r\n\r\nconst addedBirthday = (birthday) => {\r\n    return {\r\n        type: 'ADD_BIRTHDAY',\r\n        payload: birthday\r\n    };\r\n};\r\n\r\nconst changeHeader = (header) => {\r\n    return {\r\n        type: 'CHANGE_HEADER',\r\n        payload: header\r\n    };\r\n};\r\n\r\nexport {\r\n    addedName,\r\n    addedSurname,\r\n    addedPatronymic,\r\n    check,\r\n    addedEmail,\r\n    addedPassword,\r\n    addedBirthday,\r\n    changeHeader\r\n};","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { addedEmail } from '../actions/index';\r\nimport { useForm }  from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport MainContainer from './MainContainer';\r\nimport { Form } from './Form';\r\nimport { Input } from './Input';\r\nimport { ControlButton } from './Button';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email(\"Email should be correct\") \r\n        .required(\"Email is a required field\") \r\n});\r\n\r\nconst Step1Form = ({ addedEmail, email }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { register, handleSubmit, formState: { errors }  } = useForm({\r\n        defaultValues: { email: email },\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = () => {\r\n        history.push(\"/step3\")\r\n    }\r\n\r\n    // const prev = () => {\r\n    //     history.push(\"/\")\r\n    // }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">Enter your Email</Typography>\r\n            <Form onSubmit = {handleSubmit(onSubmit)} > \r\n                <Input\r\n                    {...register('email')}\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    required\r\n                    onChange={(e) => addedEmail(e.target.value)}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message} \r\n                />\r\n                {/* <ControlButton onClick={prev} >Previous</ControlButton> */}\r\n                <ControlButton>Next</ControlButton>\r\n            </Form>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.email,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addedEmail\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1Form);","import React, { useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { addedPassword} from '../actions/index';\r\nimport { useForm }  from 'react-hook-form';\r\nimport MainContainer from './MainContainer';\r\nimport { Form } from './Form';\r\nimport { Input } from './Input';\r\nimport { ControlButton } from './Button';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Step1Form = ({ addedPassword, password }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { register, handleSubmit, formState: { errors }  } = useForm({\r\n        defaultValues: { password: password },\r\n        mode: \"all\",\r\n    });\r\n\r\n    const onSubmit = () => {\r\n        history.push(\"/endpage\")\r\n    }\r\n\r\n    const checkData = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const [isPassword, setIsPassword] = useState(false);\r\n    const [isButton, setIsButton] = useState(false);\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">Pick a password</Typography>\r\n            <Form onSubmit = {handleSubmit(onSubmit)} > \r\n                <Input\r\n                    {...register('password')}\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    onInput={(e) => addedPassword(e.target.value)}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message} \r\n                />\r\n                 <Input\r\n                    {...register('repeatPassword')}\r\n                    type=\"password\"\r\n                    label=\"Repeat password\"\r\n                    name=\"repeatPassword\"\r\n                    onChange={(e) => {\r\n                        if (e.target.value !== password) {\r\n                            setIsPassword(true);\r\n                            setIsButton(false)\r\n                        } else  {\r\n                            setIsPassword(false);\r\n                            setIsButton(!isButton)\r\n                        }\r\n                    }}\r\n                    error={isPassword}\r\n                    helperText={isPassword ? \"Password mismatch\" : null}\r\n                />\r\n                <ControlButton disabled={!isButton}>Register</ControlButton>\r\n                <ControlButton onClick = {handleSubmit(checkData)}>Сheck data</ControlButton>\r\n            </Form>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        password: state.password\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addedPassword\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1Form);","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(3, 0, 5),\r\n        textAlign: \"center\",\r\n        fontSize: \"30px\",\r\n        color: \"green\",\r\n    }\r\n}));\r\n\r\nconst Header = ({ header }) => {\r\n    const styles = useStyles()\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Typography \r\n                className={styles.root} \r\n                component=\"h1\"\r\n                variant=\"h4\" \r\n            >\r\n                {header}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        header: state.header,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, { useEffect } from 'react';\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { changeHeader} from '../actions/index';\r\nimport MainContainer from './MainContainer';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    table: {\r\n        marginBottom: \"30px\",\r\n    },\r\n});\r\n\r\nconst EndPage = ({changeHeader, state}) => {\r\n\r\n    const styles = useStyles();\r\n\r\n    useEffect(() => {\r\n        changeHeader(\"Successful registration!\")\r\n    }, [changeHeader]);\r\n\r\n    const personalData = Object.entries(state)\r\n        .filter((item) => item[0] !== \"header\")\r\n        .filter((item) => item[0] !== \"password\")\r\n        .filter((item) => item[1] !== null)\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n                Your personal data\r\n            </Typography>\r\n            <TableContainer className={styles.root} >\r\n                <Table className={styles.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Field</TableCell>\r\n                            <TableCell align=\"right\">Value</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>                        \r\n                        {personalData.map((item) => (\r\n                            <TableRow key={item[0]}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {item[0]}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{item[1].toString()}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changeHeader\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EndPage);","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Step1Form from './components/Step1Form';\nimport Step2Form from './components/Step2Form';\nimport Step3Form from './components/Step3Form';\nimport Header from './components/Header';\nimport EndPage from './components/EndPage';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Step1Form} />\n          <Route exact path='/step2' component={Step2Form} />\n          <Route exact path='/step3' component={Step3Form} />\n          <Route exact path='/endpage' component={EndPage} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}